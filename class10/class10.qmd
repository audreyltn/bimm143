---
title: "Class 10: Halloween Mini-Project"
author: "Audrey Nguyen"
format: pdf
always_allow_html: yes
---

# Importing candy data

```{r}
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names = 1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```
There are 85 candy types in this dataset.

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy[, 2])
```
There are 38 fruity candy types in the dataset. 

# What is your favorite candy?

The variable `winpercent()` shows the percentage of people who prefer this candy over another randomly chosen candy from the dataset. Higher values indicate a more popular candy. 

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is its `winpercent` value?

```{r}
candy["Hershey's Special Dark", ]$winpercent
```

> Q4. What is the `winpercent` value for "Kit Kat"?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the `winpercent` value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

The `skim()` function in the **skimr** package that can help give a quick overview of a given dataset.

```{r}
library("skimr")
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The `winpercent` column has percent values instead of proportion values.

> Q7. What do you think a zero and one represent for the `candy$chocolate` column?

I think that a zero means FALSE and a one means TRUE.

> Q8. Plot a histogram of `winpercent` values.

```{r}
winpercent <- candy$winpercent
hist(winpercent)
```

> Q9. Is the distribution of `winpercent` values symmetrical?

No, it's not symmetrical. There are more values (higher frequency) on the lower side.

> Q10. Is the center of the distribution above or below 50%?

The center is below 50%.

> Q11. On average, is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocwpmean <- mean(candy$winpercent[as.logical(candy$chocolate)])
chocwpmean
```

```{r}
fruitywpmean <- mean(candy$winpercent[as.logical(candy$fruity)])
fruitywpmean
```
Chocolate candy is higher ranked than fruit candy. 

> Q12. Is this difference statistically significant?

```{r}
choc_t <- candy$winpercent[as.logical(candy$chocolate)]
fruity_t <- candy$winpercent[as.logical(candy$fruity)]
t.test(choc_t, fruity_t)
```
This difference is statisically different because the p-value is < 0.01. 

# Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
library(dplyr)
candy %>% arrange(desc(winpercent)) %>% head(5)
```
I like using the `order()` function in R better, because you don't have to download the **dplyr** package. I also don't like typing the %>% every time. 

> Q15. Make a first barplot of candy ranking based on `winpercent` values.

```{r}
library(ggplot2)
ggplot(candy) + aes(winpercent, rownames(candy)) + geom_bar(stat = "identity")
```

> Q16. Use the `reorder()` function to get the bars sorted by `winpercent`.

```{r}
ggplot(candy) + aes(winpercent, reorder(rownames(candy), winpercent)) + geom_bar(stat = "identity")
```

## Time to add some useful color

Let's set up a color vector that signifies candy type.

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

Let's try our barplot with these colors.

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols)
```

> Q17. What is the worst ranked chocolate candy?

Sixlets is the worst ranked chocolate candy.

> Q18. What is the best ranked fruity candy?

Starbursts are the best ranked fruity candy. 

# Taking a look at pricepercent

The `pricepercent` variable records the percentile rank of the candy's price against all the other candies in the dataset. Lower values are less expensive and higher values are more expensive.

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

> Q19. Which candy type is the highest ranked in terms of `winpercent` for the least money?

Reese Miniatures has a `winpercent` value > 80 and is relative cheap with a `pricepercent` of slightly above 0.25. 

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head(candy[ord,c(11,12)], n=5 )
```
Nik L Nip is the most expensive and the least popular.

> Q21. Make a barplot again with `geom_col()` this time using `pricepercent`. 

```{r}
ggplot(candy) + aes(pricepercent, reorder(rownames(candy), pricepercent)) + geom_bar(stat = "identity")
```

```{r}
# Make a lollipop chart of pricepercent
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

# Exploring the correlation structure

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (have minus values)?

Fruity and pluribus

> Q23. Similarly, what 2 variables are most positively correlated?

Chocolate and winpercent

# Principal Component Analysis

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

```{r}
plot(pca$x[, 1:2])
```

```{r}
plot(pca$x[,1:2], col=my_cols, pch = 16)
```

Use ggplot2 pacakge to make a nicer plot.

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Use the **ggrepel** package and the function `ggrepel::geom_text_repel()` to label the plot with nonoverlapping candy names. We can also add a title and subtitle.

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

If you want to see mroe candy labels, you can change the `max.overlaps` value to allow more overlapping labels or pass the ggplot object `p` to **plotly**.

```{r}
library(plotly)
```

```{r}
ggplotly(p)
```

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity and pluribus are picked up the strongest in the positive direction. This makes sense, because there's a lot of variation in fruits and pluribus (multiple candies). 
